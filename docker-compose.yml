version: '3'

services:
  consul:
    image: consul:latest
    volumes:
      - ./docker/consul/services:/services
    ports:
      - 8500:8500
      - 8600:8600
    command: "agent -server -bootstrap -ui -client=0.0.0.0 -config-dir /services/"


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    depends_on:
      - kibana
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - monitoring
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    ports:
      - "5601:5601"
    networks:
      - monitoring
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    ports:
      - "8005:8080"
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:v2.0.0
    container_name: prometheus
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - monitoring
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - monitoring
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    hostname: micro-broker
    ports:
      - 5672:5672
      - 15672:15672
######### My MICROSERVICES
  trading:
    depends_on:
      - kibana
      - rabbitmq
    build: trading
    ports:
      - "3001:3001"
  users:
    depends_on:
      - kibana
      - rabbitmq
    build: users
    ports:
      - "3002:3002"
  auth:
    depends_on:
      - kibana
      - rabbitmq
    build: auth
    ports:
      - "3003:3003"
  gateway:
    depends_on:
      - kibana
      - rabbitmq
    build: gateway
    ports:
      - "8080:8080"
  eureka:
    depends_on:
      - kibana
      - rabbitmq
    build: eureka
    ports:
      - "8761:8761"
##########

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

networks:
  postgres:
    driver: bridge
  monitoring:
    driver: bridge
volumes:
  prometheus-data: { }
  postgres: { }
  grafana-data: { }